{:rename-macros {}, :renames {}, :use-macros {}, :excludes nil, :name hs-deck-helper-cljs-front.events, :imports nil, :requires {re-frame.core re-frame.core, logger common.logger, common.logger common.logger, db hs-deck-helper-cljs-front.db, hs-deck-helper-cljs-front.db hs-deck-helper-cljs-front.db}, :uses {app-db hs-deck-helper-cljs-front.db, reg-event-db re-frame.core, after re-frame.core}, :defs {get-current-match {:protocol-inline nil, :meta {:file "C:\\Git\\hs-deck-helper-cljs\\src_front\\hs_deck_helper_cljs_front\\events.cljs", :line 8, :column 7, :end-line 8, :end-column 24, :arglists (quote ([db]))}, :name hs-deck-helper-cljs-front.events/get-current-match, :variadic false, :file "src_front\\hs_deck_helper_cljs_front\\events.cljs", :end-column 24, :method-params ([db]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([db]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:initialize-db :opposing-play :old-matches :friendly-play :card-played :friendly-draw :match-end :loses :wins :current-player}, :order [:friendly-play :friendly-draw :opposing-play :initialize-db :match-end :wins :loses :old-matches :current-player :card-played]}, :doc nil}